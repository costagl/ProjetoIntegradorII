// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Model.Models;

public partial class db_BuscaEmpregoContext : DbContext
{
    public db_BuscaEmpregoContext()
    {
    }

    public db_BuscaEmpregoContext(DbContextOptions<db_BuscaEmpregoContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Avaliacao> Avaliacao { get; set; }

    public virtual DbSet<Candidato> Candidato { get; set; }

    public virtual DbSet<Candidatura> Candidatura { get; set; }

    public virtual DbSet<Empresa> Empresa { get; set; }

    public virtual DbSet<Experiencia> Experiencia { get; set; }

    public virtual DbSet<Formacao> Formacao { get; set; }

    public virtual DbSet<Vaga> Vaga { get; set; }
     
    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)

        => optionsBuilder.UseSqlServer("Data Source=COSTA-GL\\SQLEXPRESS;Initial Catalog=db_BuscaEmprego;Integrated Security=True;TrustServerCertificate=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Avaliacao>(entity =>
        {
            entity.Property(e => e.id).IsFixedLength();

            entity.HasOne(d => d.CNPJ_EmpresaNavigation).WithMany(p => p.Avaliacao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Avaliacao_Empresa");

            entity.HasOne(d => d.CPF_CandidatoNavigation).WithMany(p => p.Avaliacao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Avaliacao_Candidato");
        });

        modelBuilder.Entity<Candidatura>(entity =>
        {
            entity.Property(e => e.id).ValueGeneratedOnAdd();

            entity.HasOne(d => d.CPF_CandidatoNavigation).WithMany()
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Candidatura_Candidato");

            entity.HasOne(d => d.idVagaNavigation).WithMany()
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Candidatura_Vaga");
        });

        modelBuilder.Entity<Experiencia>(entity =>
        {
            entity.HasOne(d => d.CPF_CandidatoNavigation).WithMany(p => p.Experiencia)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Experiencia_Candidato");
        });

        modelBuilder.Entity<Formacao>(entity =>
        {
            entity.HasOne(d => d.CPF_CandidatoNavigation).WithMany(p => p.Formacao)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Formacao_Candidato");
        });

        modelBuilder.Entity<Vaga>(entity =>
        {
            entity.HasOne(d => d.CNPJ_EmpresaNavigation).WithMany(p => p.Vaga)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vaga_Empresa");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}